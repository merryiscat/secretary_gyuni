다음 사용자 입력을 분석하여 지정된 JSON만 출력하시오. 설명, 주석, 추가 텍스트, 코드블록 표식(``` 등)은 절대 포함하지 마시오. 출력은 반드시 유효한 JSON이어야 하며, 키와 문자열에는 모두 큰따옴표(")를 사용하고, 후행 쉼표를 금지합니다.

[목표]
- 사용자 입력에서 (1) 장소, (2) 상황 조건들, (3) 각 조건별 어울리는 메뉴 5개를 생성하여 JSON으로 반환.

[규칙]
1) 장소 추출
   - 사용자 입력에 장소(예: 강남역, 홍대, 수진역, 성수, 부산 서면 등)가 있으면 원문 그대로 "location"에 넣으시오.
   - 장소명이 전혀 없으면 기본값으로 "서울"을 넣으시오.
   - 임의 보정/추측/확장 금지. 철자 그대로 사용.
   - (참고) 여러 장소가 언급되더라도 사용자가 찾는 대상으로 보이는 단일 장소만 선택. 불명확하면 가장 구체적(역/동/상호 등)인 한 곳을 사용.

2) 상황 조건 추출
   - 사용자 입력에 실제로 언급된 요소만 추출하시오. 추측/상상 금지.
   - 가능한 많이 뽑되, 중복/유사 표현은 하나로 정리.
   - 예시 범주: 시간(아침/점심/저녁/야식), 요일/주말, 날씨(비오는 날/눈 오는 날/더운 날/추운 날), 동반자(혼자/부모님과/연인과/친구와/아이와), 목적·분위기(술집/데이트/회식/조용한/가성비/프리미엄/뷰 좋은), 식사 맥락(매운 것/해장/기름진/담백한/든든한/간단한), 알코올(막걸리/소주/와인 등 언급 여부), 식사 시간대(브런치/야식 등), 기타 제약(예산/대기 싫음/예약 원함 등).
   - conditions 배열에는 사용자 입력에 등장한 키워드만 한국어로 단문 형태로 넣으시오. (예: "비오는 날", "혼자", "저녁", "술집")

3) 각 조건별 메뉴 5개 생성 (condition_food_map)
   - 각 조건마다 실제 식당에서 파는 **정확한 메뉴명** 5개를 제안하시오.
   - 금지(절대 사용 금지): 범주/모호/수식어/형용사/세트/정식/코스/종류/기타 포괄적 표현
     예) "각종 찌개", "정식", "세트메뉴", "국물 요리", "해산물 요리", "따끈한 해장국", "얼큰한 국물", "분식", "튀김류"
   - 허용(예시): "김치찌개", "부대찌개", "갈비찜", "제육볶음", "낙지볶음", "간장게장", "연어사시미", "마르게리타 피자", "봉골레 파스타", "바삭한 돈카츠" → 단, 불필요한 형용사는 제거하여 메뉴명만 사용(예: "돈카츠").
   - 한국/일식/중식/양식/분식/주점 안주 등 **구체적 메뉴명**으로만 구성.
   - 각 조건마다 정확히 5개를 제시. 같은 조건 내 중복 금지.
   - 조건과 메뉴의 일반적 상관성을 고려(예: "비오는 날"→"파전", "막걸리"; "해장"→"콩나물국밥", "순대국" 등). 단, 모두 **메뉴명**으로 표기.

4) 출력 형식(엄수)
아래 JSON 스키마와 **정확히 동일한 키**와 구조를 사용하여 출력하시오. 다른 키/구조 금지.
{{
  "location": "장소명",
  "conditions": ["조건1", "조건2", "...", "조건N"],
  "condition_food_map": {{
    "조건1": ["음식1", "음식2", "음식3", "음식4", "음식5"],
    "조건2": ["음식1", "음식2", "음식3", "음식4", "음식5"],
    "...": ["음식1", "음식2", "음식3", "음식4", "음식5"],
    "조건N": ["음식1", "음식2", "음식3", "음식4", "음식5"]
  }}
}}

5) 비어있는 경우 처리
   - 조건이 하나도 없으면 "conditions": [] 로, "condition_food_map": [] 로 출력.

[사용자 입력]
{user_input}
